{"version":3,"sources":["../../src/services/app-config.service.ts"],"names":[],"mappings":";;AAAA,sCAAgE;AAChE,0CAAmD;AAGnD;IAEE,0BAAqB,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;IAAG,CAAC;IAE3C,2CAAgB,GAAhB;QACE,OAAO,yBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,kBAAW,EAAG,EAAE,EAAG,EAAC;KACtE,EAF6F,CAE7F,CAAC;IACF,uBAAC;CAdD,AAcC,IAAA;AAdY,4CAAgB","file":"app-config.service.js","sourceRoot":"","sourcesContent":["import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n\r\nexport class AppConfigService {\r\n\r\n  constructor( private platformId: Object) {}\r\n\r\n  isPlatformServer() {\r\n    return isPlatformServer(this.platformId);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}